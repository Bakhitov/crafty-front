-- –§–ò–ù–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ö–µ–º—ã ai –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ public
-- –í—ã–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤ Supabase Dashboard -> SQL Editor

-- –ü–†–û–ë–õ–ï–ú–ê: –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ SQL —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–≤–∞–ª–∏ —Ç–∞–±–ª–∏—Ü—ã –≤ —Å—Ö–µ–º–µ ai, –Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç public
-- –†–ï–®–ï–ù–ò–ï: –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ ai —Å—Ö–µ–º—É –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ public

-- 1. –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ ai —Å—Ö–µ–º—É
DROP FUNCTION IF EXISTS public.get_user_company(UUID);
DROP FUNCTION IF EXISTS public.create_user_company(UUID, TEXT);
DROP FUNCTION IF EXISTS public.get_user_agent_ids(TEXT);

-- 2. –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ public.companies —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
CREATE TABLE IF NOT EXISTS public.companies (
  id UUID NOT NULL DEFAULT gen_random_uuid(),
  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
  updated_at TIMESTAMP WITH TIME ZONE NULL DEFAULT now(),
  user_ids TEXT[] NULL,
  name TEXT NULL,
  type TEXT NULL,
  restricted_at TIMESTAMP WITH TIME ZONE NULL,
  is_active BOOLEAN NOT NULL DEFAULT false,
  CONSTRAINT companies_pkey PRIMARY KEY (id)
);

-- 3. –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
CREATE INDEX IF NOT EXISTS idx_companies_user_ids ON public.companies USING GIN (user_ids);
CREATE INDEX IF NOT EXISTS idx_companies_is_active ON public.companies (is_active);
CREATE INDEX IF NOT EXISTS idx_companies_created_at ON public.companies (created_at);

-- 4. –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–æ–ª—å–∫–æ public)
CREATE OR REPLACE FUNCTION public.get_user_company(p_user_id UUID)
RETURNS TABLE(
    id UUID,
    created_at TIMESTAMP WITH TIME ZONE,
    updated_at TIMESTAMP WITH TIME ZONE,
    user_ids TEXT[],
    name TEXT,
    type TEXT,
    restricted_at TIMESTAMP WITH TIME ZONE,
    is_active BOOLEAN
)
LANGUAGE sql
SECURITY DEFINER
AS $$
    SELECT c.id, c.created_at, c.updated_at, c.user_ids, c.name, c.type, c.restricted_at, c.is_active
    FROM public.companies c
    WHERE p_user_id::TEXT = ANY(c.user_ids)
    LIMIT 1;
$$;

-- 5. –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏ (—Ç–æ–ª—å–∫–æ public)
CREATE OR REPLACE FUNCTION public.create_user_company(
    p_user_id UUID,
    p_user_email TEXT DEFAULT NULL
)
RETURNS TABLE(
    id UUID,
    created_at TIMESTAMP WITH TIME ZONE,
    updated_at TIMESTAMP WITH TIME ZONE,
    user_ids TEXT[],
    name TEXT,
    type TEXT,
    restricted_at TIMESTAMP WITH TIME ZONE,
    is_active BOOLEAN
)
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
DECLARE
    company_name TEXT;
    new_company public.companies%ROWTYPE;
BEGIN
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∫–æ–º–ø–∞–Ω–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    IF EXISTS (
        SELECT 1 FROM public.companies c 
        WHERE p_user_id::TEXT = ANY(c.user_ids)
    ) THEN
        -- –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–æ–º–ø–∞–Ω–∏—é
        RETURN QUERY 
        SELECT c.id, c.created_at, c.updated_at, c.user_ids, c.name, c.type, c.restricted_at, c.is_active
        FROM public.companies c
        WHERE p_user_id::TEXT = ANY(c.user_ids)
        LIMIT 1;
        RETURN;
    END IF;

    -- –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è –∫–æ–º–ø–∞–Ω–∏–∏
    IF p_user_email IS NOT NULL THEN
        company_name := split_part(p_user_email, '@', 1) || ' Company';
    ELSE
        company_name := 'My Company';
    END IF;

    -- –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–æ–º–ø–∞–Ω–∏—é (is_active = false –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
    INSERT INTO public.companies (name, type, user_ids, is_active)
    VALUES (company_name, 'default', ARRAY[p_user_id::TEXT], false)
    RETURNING * INTO new_company;

    -- –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—É—é –∫–æ–º–ø–∞–Ω–∏—é
    RETURN QUERY 
    SELECT new_company.id, new_company.created_at, new_company.updated_at, 
           new_company.user_ids, new_company.name, new_company.type, 
           new_company.restricted_at, new_company.is_active;
END;
$$;

-- 6. –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π
GRANT EXECUTE ON FUNCTION public.get_user_company(UUID) TO anon, authenticated;
GRANT EXECUTE ON FUNCTION public.create_user_company(UUID, TEXT) TO anon, authenticated;

-- 7. –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —Ç–∞–±–ª–∏—Ü—É
GRANT SELECT, INSERT, UPDATE ON public.companies TO anon, authenticated;

-- 8. –í–∫–ª—é—á–∞–µ–º RLS –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
ALTER TABLE public.companies ENABLE ROW LEVEL SECURITY;

-- 9. –°–æ–∑–¥–∞–µ–º –ø–æ–ª–∏—Ç–∏–∫—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤–∏–¥—è—Ç —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ –∫–æ–º–ø–∞–Ω–∏–∏
DROP POLICY IF EXISTS "Users can view their own companies" ON public.companies;
CREATE POLICY "Users can view their own companies" ON public.companies
FOR ALL USING (auth.uid()::TEXT = ANY(user_ids));

-- 10. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
DO $$
DECLARE
    func_exists BOOLEAN;
    table_exists BOOLEAN;
BEGIN
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
    SELECT EXISTS (
        SELECT 1 FROM information_schema.routines 
        WHERE routine_schema = 'public' 
        AND routine_name = 'get_user_company'
    ) INTO func_exists;
    
    IF NOT func_exists THEN
        RAISE EXCEPTION 'Function get_user_company was not created properly';
    END IF;
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É
    SELECT EXISTS (
        SELECT 1 FROM information_schema.tables 
        WHERE table_schema = 'public' 
        AND table_name = 'companies'
    ) INTO table_exists;
    
    IF NOT table_exists THEN
        RAISE EXCEPTION 'Table public.companies does not exist';
    END IF;
    
    RAISE NOTICE '‚úÖ Database setup completed successfully. All functions use public schema only.';
END
$$;

-- 11. –û–ü–¶–ò–û–ù–ê–õ–¨–ù–û: –£–¥–∞–ª—è–µ–º —Å—Ö–µ–º—É ai –ø–æ–ª–Ω–æ—Å—Ç—å—é (—Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –µ—Å–ª–∏ —É–≤–µ—Ä–µ–Ω—ã)
-- DROP SCHEMA IF EXISTS ai CASCADE;

-- 12. –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
DO $$
BEGIN
    RAISE NOTICE 'üéâ Migration completed! All database functions now use public schema only.';
    RAISE NOTICE '‚úÖ You can now use the "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø" button on access-denied page.';
    RAISE NOTICE '‚úÖ Changes to is_active in database will be reflected within 5 minutes (or instantly with cache clear).';
END
$$; 