// –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ö—É–∫ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–æ–≤
// –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –∏–∑–±—ã—Ç–æ—á–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∞–≥–µ–Ω—Ç–∞

import { useCallback, useRef } from 'react'
import { usePlaygroundStore } from '@/store'
import { useQueryState } from 'nuqs'
import useChatActions from '@/hooks/useChatActions'

export function useAgentSwitch() {
  const { setSelectedAgent, setSelectedModel, setHasStorage } =
    usePlaygroundStore()

  const { startAgentSwitch, completeAgentSwitch, focusChatInput } =
    useChatActions()
  const [, setAgentId] = useQueryState('agent')
  const [, setSessionId] = useQueryState('session')

  // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
  const switchInProgressRef = useRef(false)

  const switchToAgent = useCallback(
    async (agent: {
      value: string
      label: string
      model: { provider: string }
      storage?: boolean
      storage_config?: { enabled?: boolean }
    }) => {
      // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
      if (switchInProgressRef.current) {
        console.log('üîÑ useAgentSwitch: Switch already in progress, skipping')
        return
      }

      try {
        switchInProgressRef.current = true

        console.log('üîÑ useAgentSwitch: Switching to agent:', {
          agentId: agent.value,
          agentName: agent.label,
          model: agent.model.provider
        })

        // –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞ (–±–ª–æ–∫–∏—Ä—É–µ—Ç –ª–∏—à–Ω–∏–µ –∑–∞–ø—Ä–æ—Å—ã)
        startAgentSwitch()

        // –°–ò–ù–•–†–û–ù–ù–û –æ—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏—é –∏–∑ URL —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É —Å—Ç–∞—Ä–æ–π —Å–µ—Å—Å–∏–∏
        const url = new URL(window.location.href)
        url.searchParams.delete('session')
        window.history.replaceState({}, '', url.toString())
        console.log(
          'üßπ useAgentSwitch: Cleared sessionId from URL synchronously'
        )

        // –û—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏—é –∏–∑ URL
        setSessionId(null)

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–≥–æ –∞–≥–µ–Ω—Ç–∞ –≤ store (–ë–ï–ó –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö)
        setSelectedAgent(agent)
        setSelectedModel(agent.model.provider)
        setHasStorage(agent.storage || agent.storage_config?.enabled || false)

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≥–µ–Ω—Ç–∞ –≤ URL
        await setAgentId(agent.value)

        console.log('‚úÖ useAgentSwitch: Agent switched successfully:', {
          agentId: agent.value,
          agentName: agent.label
        })

        // –ù–ï –∑–∞–≤–µ—Ä—à–∞–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞ –∑–¥–µ—Å—å - —ç—Ç–æ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ—Å—Å–∏–π
        // completeAgentSwitch() –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω –≤ Sessions.tsx –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ—Å—Å–∏–π
        focusChatInput()
      } catch (error) {
        console.error('‚ùå useAgentSwitch: Error switching agent:', error)
        completeAgentSwitch() // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–∏ –æ—à–∏–±–∫–µ
      } finally {
        switchInProgressRef.current = false
      }
    },
    [
      setSelectedAgent,
      setSelectedModel,
      setHasStorage,
      setAgentId,
      setSessionId,
      startAgentSwitch,
      completeAgentSwitch,
      focusChatInput
    ]
  )

  return {
    switchToAgent
  }
}
